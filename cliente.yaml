openapi: 3.0.0
info:
  title: API de Clientes
  version: 1.0.0
  description: API para manejar operaciones relacionadas con clientes y sus productos financieros.
paths:
  /api/client/create:
    post:
      summary: Crear un nuevo cliente
      description: Crea un nuevo cliente con los detalles proporcionados, incluyendo productos financieros asociados.
      parameters:
        - name: id
          in: query
          description: ID del cliente (opcional, si se desea asignar un ID específico al crear el cliente)
          required: false
          schema:
            type: integer
            example: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombres:
                  type: string
                  example: "Teresa Carlos"
                apellidos:
                  type: string
                  example: "Pérez García"
                tipoDocumento:
                  type: string
                  example: "DNI"
                numeroDocumento:
                  type: string
                  example: "15678912"
                productosFinancieros:
                  type: array
                  items:
                    type: object
                    properties:
                      tipoProducto:
                        type: string
                        example: "Cuenta de ahorro"
                      nombre:
                        type: string
                        example: "Cuenta Súper Tasa"
                      saldo:
                        type: number
                        format: float
                        example: 0.0
      responses:
        '201':
          description: Cliente creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "Created"
                  status:
                    type: integer
                    example: 201
                  comment:
                    type: string
                    example: "Cliente creado exitosamente"
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Cliente: Nombre: Teresa Carlos Apellido: Pérez García"
        '400':
          description: Error de validación en los datos proporcionados
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "BAD_REQUEST"
                  status:
                    type: integer
                    example: 400
                  comment:
                    type: string
                    example: "Los datos proporcionados no son válidos"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  status:
                    type: integer
                    example: 500
                  comment:
                    type: string
                    example: "Ocurrió un error interno al procesar la solicitud"

  /api/client/{id}:
    get:
      summary: Obtener un cliente por ID
      description: Recupera los detalles de un cliente basado en su ID.
      parameters:
        - name: id
          in: path
          description: ID del cliente que se desea obtener
          required: true
          schema:
            type: integer
            example: 14
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: OK
                  status:
                    type: integer
                    example: 200
                  comment:
                    type: string
                    example: Producto encontrado
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      nombres:
                        type: string
                        example: "admin"
                      apellidos:
                        type: string
                        example: "Pérez García"
                      codigoUnico:
                        type: string
                        example: ":Bl8Fmfh-m;j>-AAc9-D<>:-sD842@;?l3>@_1054992261_1731702112793"
                      tipoDocumento:
                        type: string
                        example: "DNI"
                      numeroDocumento:
                        type: string
                        example: "45678912"
                      productosFinancieros:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 4
                            tipoProducto:
                              type: string
                              example: "Cuenta de ahorro"
                            nombre:
                              type: string
                              example: "Cuenta Súper Tasa"
                            saldo:
                              type: integer
                              example: 0
                            fechaCreacion:
                              type: string
                              format: date-time
                              example: "2024-11-15T05:54:04.220458"
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NOT_FOUND
                  status:
                    type: integer
                    example: 404
                  comment:
                    type: string
                    example: Cliente no encontrado
  /api/auth/create:
    post:
      summary: Crear una nueva autenticación para un cliente
      description: Crea una nueva autenticación basada en los datos proporcionados en el cuerpo de la solicitud.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  example: "12345"
                password:
                  type: string
                  example: "P@ssw0rd!"
      responses:
        '201':
          description: Autenticación creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "SUCCESS"
                  status:
                    type: integer
                    example: 201
                  comment:
                    type: string
                    example: "Authentication created successfully"
                  data:
                    type: object
                    properties:
                      clientId:
                        type: string
                        example: "12345"
                      authToken:
                        type: string
                        example: "abcdef1234567890"
        
        '400':
          description: Error en la validación de la contraseña
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "ERROR"
                  status:
                    type: integer
                    example: 400
                  comment:
                    type: string
                    example: "Error: Password is invalid. Ensure it has at least 8 characters, one uppercase letter, and one special character."
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "ERROR"
                  status:
                    type: integer
                    example: 500
                  comment:
                    type: string
                    example: "An unexpected error occurred"   